# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
unbind C-b

# Change bind key to Ctrl-a
set -g prefix C-a

bind a send-prefix

# Start window numbers from 1
set -g base-index 1

# Set escape time so vim is responsive inside tmux
set -g escape-time 1

# Lower default key repeat (500ms) to 125ms
# otherwise hitting up arrow right after moving to new window counts
# as moving back to window above
set -g repeat-time 125

# Allow traverse of command history without entering normal mode
set -g history-limit 100000

# Mouse support
set -g mouse on

# Set 256 color support
set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "screen-256color"

# Set so you don't end up with window numbers like: 0 1 4 5 6
set -g renumber-windows on

# Shell
set -g default-shell ${SHELL}
set -g default-command ${SHELL}

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------

# Copy mode
set -gw mode-keys vi

# -------------------------------------------------------------------
# Bindings
# -------------------------------------------------------------------

# Make new panes and windows, opens in current pwd
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Bind 'r' to reload tmux config
bind r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# Smart pane switching with awareness of vim splits
# makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p results
# inside vim.

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
  tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
  ($is_fzf && tmux send-keys C-j) || \
  tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
  ($is_fzf && tmux send-keys C-k)  || \
  tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
  tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# copy-mode
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key y send-keys C-l C-a \; run-shell 'sleep 0.25' \;\
  copy-mode \; send-keys -X begin-selection \;\
  send-keys -X -N 100 'cursor-down' \;\
  send-keys -X 'end-of-line' \;\
  send-keys -X 'previous-word' \;\
  send-keys -X 'next-word-end' \;\
  send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \;\
  send-keys C-e \;\
  display-message "Line copied"

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------

set -g status-style bg=colour237
set -g status-justify left
set -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set -g status-left-length 16
set -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set -g status-interval 60

set -g pane-border-style fg=colour243
set -g pane-border-status bottom
set -g pane-border-format "#{pane_index} #{pane_current_command}"

set -g pane-active-border-style fg=colour245

set -gw window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set -gw window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# -------------------------------------------------------------------
# tmux-plugin-manager
# from: tmux-plugins/tpm
# -------------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
#set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
